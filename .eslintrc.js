module.exports = {
  parser: "@typescript-eslint/parser",
  extends: [
    "airbnb-typescript",
    "plugin:prettier/recommended",
    "plugin:react/recommended",
    "plugin:import/recommended",
  ],
  plugins: ["react-hooks", "react", "eslint-plugin-prettier"],
  parserOptions: {
    project: "./tsconfig.json",
    ecmaVersion: 2018,
    sourceType: "module",
    ecmaFeatures: {
      jsx: true,
      modules: true,
    },
  },
  root: true,
  env: {
    browser: true,
    es6: true,
  },
  rules: {
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-useless-constructor": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-extra-non-null-assertion": "warn",
    "import/named": "off",
    "import/export": "off",
    "import/prefer-default-export": "off",
    "import/no-unresolved": [
      0,
      {
        caseSensitive: false,
      },
    ],
    "import/no-extraneous-dependencies": "off",
    "import/order": "off",
    "import/first": "error",
    "import/no-cycle": "off",
    "no-param-reassign": "off",
    "no-dupe-class-members": "off",
    "no-new": "off",
    "no-underscore-dangle": "off",
    "no-plusplus": "off",
    "no-shadow": "off",
    "no-undef": "off",
    "no-unneeded-ternary": "off",
    "no-restricted-syntax": "off",
    "no-return-await": "off",
    "no-useless-constructor": "off",
    "no-debugger": process.env.NODE_ENV === "development" ? "off" : "error",
    "no-alert": process.env.NODE_ENV === "development" ? "off" : "error",
    "no-console": process.env.NODE_ENV === "development" ? "off" : "error",
    "no-useless-return": "off",
    "no-bitwise": "off",
    "no-return-assign": "off",
    "no-empty-function": "off",
    "no-nested-ternary": "off",
    "no-unused-expressions": "off",
    "lines-between-class-members": "off",
    "dot-notation": "off",
    "prefer-destructuring": "off",
    "prefer-spread": "off",
    "consistent-return": "off",
    "array-callback-return": "off",
    "no-async-promise-executor": "off",
    "react/no-unescaped-entities": "off",
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-curly-brace-presence": "off",
    "react/sort-comp": "off",
    "react/jsx-wrap-multilines": "off",
    "react/jsx-indent": "off",
    "react/destructuring-assignment": "off",
    "class-methods-use-this": "off",
    "operator-assignment": "off",
    "operator-linebreak": "off",
    "no-unexpected-multiline": "off",
    "require-await": "warn",
    "max-len": [
      "off",
      {
        code: 80,
      },
    ],
    "implicit-arrow-linebreak": "off",
    "func-names": "off",
    "max-classes-per-file": "off",
    "prefer-object-spread": "off",
    "react/react-in-jsx-scope": "off",
    "react/static-property-placement": "off",
    "react/jsx-props-no-spreading": "off",
    "react/state-in-constructor": "off",
    "react/jsx-fragments": "off",
    "react/prop-types": "off",
    "react/no-this-in-sfc": "off",
    "prettier/prettier": [
      "error",
      {
        singleQuote: true,
        jsxSingleQuote: false,
        trailingComma: "all",
        endOfLine: "auto",
      },
    ],
    "react-hooks/rules-of-hooks": "warn", // Checks rules of Hooks
    "react-hooks/exhaustive-deps": "warn", // Checks effect dependencies
    "import/dynamic-import-chunkname": "warn",
    "no-restricted-imports": [
      "error",
      {
        name: "mobx-react-lite",
        message: "Please import from mobx-react instead.",
      },
    ],
    "import/extensions": "off",
  },
  settings: {
    react: {
      pragma: "React",
      version: "detect",
    },
    "import/ignore": ["node_modules"],
  },
  overrides: [
    {
      files: ["**/__tests__/**/*", "**/__mocks__/**/*"],
      rules: {
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-extra-non-null-assertion": "off",
        "global-require": "off",
        "import/no-dynamic-require": "off",
      },
    },
    {
      files: ["**/package.json"],
      parser: "esprima",
      plugins: ["json-files"],
      rules: {
        "json-files/sort-package-json": "error",
      },
    },
  ],
};
